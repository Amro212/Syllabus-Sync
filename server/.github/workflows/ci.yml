name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  ios-build:
    name: iOS Build
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Build iOS App
      run: |
        cd "Syllabus Sync"
        xcodebuild \
          -project "Syllabus Sync.xcodeproj" \
          -scheme "Syllabus Sync" \
          -destination "platform=iOS Simulator,name=iPhone 16" \
          clean build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run iOS Tests (if they exist)
      run: |
        cd "Syllabus Sync"
        xcodebuild test \
          -project "Syllabus Sync.xcodeproj" \
          -scheme "Syllabus Sync" \
          -destination "platform=iOS Simulator,name=iPhone 16" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO || echo "No tests to run or tests failed"

  server-test:
    name: Server TypeCheck & Test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./server
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: TypeScript type checking
      run: npx tsc --noEmit
      
    - name: Run tests
      run: npm test -- --run
      
    - name: Build check (Wrangler)
      run: npx wrangler deploy --dry-run || echo "Dry run completed"

  # Combined status check for branch protection
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [ios-build, server-test]
    if: always()
    
    steps:
    - name: Check all jobs
      run: |
        if [ "${{ needs.ios-build.result }}" = "success" ] && [ "${{ needs.server-test.result }}" = "success" ]; then
          echo "All CI jobs passed!"
          exit 0
        else
          echo "Some CI jobs failed!"
          echo "iOS Build: ${{ needs.ios-build.result }}"
          echo "Server Test: ${{ needs.server-test.result }}"
          exit 1
        fi
